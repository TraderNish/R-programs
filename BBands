
require(quantstrat)
suppressWarnings(rm("order_book.bbands",pos=.strategy))
suppressWarnings(rm("account.bbands","portfolio.bbands",pos=.blotter))
suppressWarnings(rm("account.st","portfolio.st","stock.str","stratBBands","initDate","initEq",'start_t','end_t'))

# some things to set up here
stock.str= c('SPY', 'JPM', 'WFC') 

# we'll pass these 
SD = 2 # how many standard deviations, traditionally 2
N = 20 # how many periods for the moving average, traditionally 20
from="2010-03-26"
to="2015-03-25"

currency('USD')
stock(stock.str,currency='USD',multiplier=1)

initDate='2006-12-31'
initEq=100000

strategy.st = portfolio.st= account.st='bbands'
rm.strat(strategy.st)
initPortf(portfolio.st, symbols= stock.str, initDate=initDate, currency='USD')
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, currency='USD',initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy(strategy.st, store=TRUE)
stratBBands <- strategy("bbands")




#one indicator
stratBBands <- add.indicator(strategy = stratBBands, name = "BBands", 
                             arguments = list(HLC = quote(HLC(mktdata)), maType='SMA'), 
                             label='BBands')


#add signals:
stratBBands <- add.signal(stratBBands,name="sigCrossover",
                          arguments = list(columns=c("Close","up"),relationship="gt"),
                          label="Cl.gt.UpperBand")

stratBBands <- add.signal(stratBBands,name="sigCrossover",
                          arguments = list(columns=c("Close","dn"),relationship="lt"),
                          label="Cl.lt.LowerBand")

stratBBands <- add.signal(stratBBands,name="sigCrossover",
                          arguments = list(columns=c("High","Low","mavg"),
                                           relationship="op"),
                          label="Cross.Mid")

# lets add some rules
stratBBands <- add.rule(stratBBands,name='ruleSignal', 
                        arguments = list(sigcol="Cl.gt.UpperBand",sigval=TRUE, 
                                         orderqty=-100, ordertype='market', 
                                         orderside=NULL, threshold=NULL),
                        type='enter')


stratBBands <- add.rule(stratBBands,name='ruleSignal', 
                        arguments = list(sigcol="Cl.lt.LowerBand",sigval=TRUE, 
                                         orderqty= 100, ordertype='market', 
                                         orderside=NULL, threshold=NULL),
                        type='enter')


stratBBands <- add.rule(stratBBands,name='ruleSignal', 
                        arguments = list(sigcol="Cross.Mid",sigval=TRUE, 
                                         orderqty= 'all', ordertype='market', 
                                         orderside=NULL, threshold=NULL),
                        type='exit')

getSymbols(stock.str,from= from, to = to, src="yahoo", adjust=TRUE) 
start_t<-Sys.time()
out<-try(applyStrategy(strategy=stratBBands , portfolios='bbands',
                       parameters=list(sd=SD,n=N)) )

# set up analytics

start_t<-Sys.time()
updatePortf(Portfolio='bbands',Dates=paste('::',as.Date(Sys.time()),sep=''))
updateAcct('bbands')
updateEndEq('bbands')
end_t<-Sys.time()
print("trade blotter portfolio update:")
print(end_t-start_t)


stats   = tradeStats('bbands')
View(stats)
ptstats = perTradeStats('bbands')
instRets = PortfReturns('bbands')

portfRets = xts(rowMeans(instRets) * ncol(instRets), order.by = index(instRets))
portfRets = portfRets [!is.na(portfRets)]
cumPortfRets = cumprod(1 + portfRets)
firstNonZeroDay = as.character(index(portfRets)[min(which(portfRets != 0))])

# Comparison with SPY 

par(mfrow = c(1, 1))

# getSymbols("SPY", from = from, to = to)
SPYrets = diff(log(Cl(SPY)))[-1]
cumSPYrets = cumprod(1 + SPYrets)
comparison = cbind(cumPortfRets, cumSPYrets)
colnames(comparison) = c("strategy", "SPY")
chart.TimeSeries(comparison, legend.loc = "topleft", colors = c("green", "red"))

# Calculate risk metrics

SharpeRatio = SharpeRatio.annualized(portfRets, Rf = 0.000119048)
SharpeRatio
# Annualized Sharpe Ratio (Rf=3%) 0.205259

AnnualReturn = Return.annualized(R = portfRets)
AnnualReturn
# Annualized Return 0.04742953

Max_Drawdown = maxDrawdown(portfRets)
Max_Drawdown
# 0.1049142

chart.CumReturns(portfRets)

# Sortino Ratio
SortinoRatio = SortinoRatio(R = portfRets, MAR = 0.03, weights = NULL)
SortinoRatio
# Sortino Ratio (MAR = 3%) -0.9859208

# calculate a Calmar or Sterling reward/risk ratio
CalmarRatio = CalmarRatio(R = portfRets, scale = NA)
CalmarRatio
# Calmar Ratio 0.4520791


# calculate Treynor Ratio or modified Treynor Ratio of excess return over CAPM beta

TreynorRatio = TreynorRatio(portfRets, SPYrets, Rf = 0.03, scale = NA, modified = FALSE)
TreynorRatio 
#  -3.209815

summary = matrix(c(SharpeRatio, AnnualReturn, Max_Drawdown,
                   SortinoRatio, CalmarRatio, TreynorRatio),nrow=6,byrow=TRUE)
colnames(summary) = c("MAC")
rownames(summary) = c("SharpeRatio", "AnnualReturn", "Max_Drawdown",
                      "SortinoRatio", "CalmarRatio", "TreynorRatio")
summary = as.table(summary)
summary
chart.TimeSeries(comparison, legend.loc = "topleft", colors = c("green", "red"))
chart.CumReturns(portfRets, main = "Strategy - bbands", col = "blue")
