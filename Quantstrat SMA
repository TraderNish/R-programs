## A very simple trend following strategy:

## Buy when monthly price > 12-month SMA
## Sell and move to cash when monthly price < 12-month SMA.
## 10 years of monthly data, S&P Sector ETFs.
## No shorting, 'sell' goes to cash.
## Positions are fixed.

require(quantstrat)
require(PerformanceAnalytics)
require (tseries)
require(xts)
require(quantmod)
require(timeSeries)
require(TTR)

initDate="1990-01-01"
from="2003-01-01"
to="2012-12-31"
options(width=70)

currency('USD')
Sys.setenv(TZ="UTC")

symbols <- c("XLB", #SPDR Materials sector
             "XLE", #SPDR Energy sector
             "XLF", #SPDR Financial sector
             "XLP", #SPDR Consumer staples sector
             "XLI", #SPDR Industrial sector
             "XLU", #SPDR Utilities sector
             "XLV", #SPDR Healthcare sector
             "XLK", #SPDR Tech sector
             "XLY", #SPDR Consumer discretionary sector
             "RWR", #SPDR Dow Jones REIT ETF
             
             "EWJ", #iShares Japan
             "EWG", #iShares Germany
             "EWU", #iShares UK
             "EWC", #iShares Canada
             "EWY", #iShares South Korea
             "EWA", #iShares Australia
             "EWH", #iShares Hong Kong
             "EWS", #iShares Singapore
             "IYZ", #iShares U.S. Telecom
             "EZU", #iShares MSCI EMU ETF
             "IYR", #iShares U.S. Real Estate
             "EWT", #iShares Taiwan
             "EWZ", #iShares Brazil
             "EFA", #iShares EAFE
             "IGE", #iShares North American Natural Resources
             "EPP", #iShares Pacific Ex Japan
             "LQD", #iShares Investment Grade Corporate Bonds
             "SHY", #iShares 1-3 year TBonds
             "IEF", #iShares 3-7 year TBonds
             "TLT" #iShares 20+ year Bonds
)

#SPDR ETFs first, iShares ETFs afterwards
if(!"XLB" %in% ls()) { 
      suppressMessages(getSymbols(symbols, from=from, to=to, src="yahoo", adjust=TRUE))  
}

## The backtest needs the instrument specifications. This is the line of code to do so:

for(symbol in symbols){
      stock(symbol,currency="USD",multiplier=1)
}

## trade sizing and initial equity settings
tradeSize <- 100000
initEq <- tradeSize*length(symbols)

strategy.st <- portfolio.st <- account.st <- "TrendFollowingWithSMA"
rm.strat(strategy.st)

initPortf(portfolio.st, symbols=symbols, initDate=initDate, currency='USD')
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, currency='USD',initEq=initEq)

initOrders(portfolio.st, initDate=initDate)
strategy(strategy.st, store=TRUE)

s = strategy("TrendFollowingWithSMA")
s = add.indicator(
      strategy.st, 
      name = "SMA",
      arguments=list(x=quote(Cl(mktdata)), n=250),
      label = "SMA250"
      )

test <- applyIndicators(strategy.st, mktdata=OHLC(XLB))
head(test, 10)
tail(test, 10)

s = add.signal(strategy.st,
      name="sigCrossover",
      arguments = list(data = quote(mktdata), columns = c("Close", "SMA"), relationship="gt"),
      label = "Cl.gt.SMA" )

s = add.signal(strategy.st,
               name="sigCrossover",
               arguments = list(data = quote(mktdata), columns = c("Close", "SMA"), relationship="lt"),
               label = "Cl.lt.SMA" )

test <- applyIndicators(strategy.st, mktdata=OHLC(XLB))
head(test, 10)
tail(test, 10)


s = add.rule(strategy.st, 
             name="ruleSignal", 
             arguments=list(sigcol="Cl.gt.SMA",sigval=TRUE,orderqty=100, ordertype="market", orderside= NULL,replace=FALSE, prefer="Open",threshold = NULL, orderside = "long"), type="enter", path.dep=TRUE)

s = add.rule(strategy.st, 
             name="ruleSignal", 
             arguments=list(sigcol="Cl.lt.SMA",sigval=TRUE,orderqty='all', ordertype="market", orderside= NULL,replace=FALSE, prefer="Open",threshold = NULL, orderside = "long"), type="exit", path.dep=TRUE)

## apply strategy
t1 <- Sys.time()
out <- try(applyStrategy(strategy=strategy.st,portfolios=portfolio.st))
t2 <- Sys.time()
print(t2-t1)


## set up analytics
a = updatePortf(portfolio.st)
dateRange <- time(getPortfolio(portfolio.st)$summary)[-1]
updateAcct(portfolio.st)
updateEndEq(account.st)

## Individual instrument equity curve
chart.Posn(portfolio.st, "XLB")

#tradeStats

